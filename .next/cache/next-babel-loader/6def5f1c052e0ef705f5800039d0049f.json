{"ast":null,"code":"var _jsxFileName = \"/home/brian/portfolio/components/animations/TrailAnimation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Fragment } from \"react\";\nimport { useTrail, animated } from \"react-spring\";\nexport default function Trail({\n  str\n}) {\n  const title = str.split(\" \");\n  const config = {\n    mass: 10,\n    tension: 600,\n    friction: 200\n  };\n  const trail = useTrail(title.length, {\n    config,\n    opacity: 1,\n    x: 20,\n    height: 80,\n    from: {\n      opacity: 0,\n      x: 20,\n      height: 0\n    }\n  });\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, trail.map((_ref, index) => {\n    let {\n      x,\n      height\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"x\", \"height\"]);\n\n    return __jsx(animated.span, {\n      key: title[index],\n      style: _objectSpread({}, rest, {\n        transform: x.interpolate(x => `translate3d(0, ${x}px,0)`)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, `${title[index]} `);\n  }));\n}","map":{"version":3,"sources":["/home/brian/portfolio/components/animations/TrailAnimation.js"],"names":["Fragment","useTrail","animated","Trail","str","title","split","config","mass","tension","friction","trail","length","opacity","x","height","from","map","index","rest","transform","interpolate"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAwB;AACrC,QAAMC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAd;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,OAAO,EAAE,GAArB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAAf;AAEA,QAAMC,KAAK,GAAGV,QAAQ,CAACI,KAAK,CAACO,MAAP,EAAe;AACnCL,IAAAA,MADmC;AAEnCM,IAAAA,OAAO,EAAE,CAF0B;AAGnCC,IAAAA,CAAC,EAAE,EAHgC;AAInCC,IAAAA,MAAM,EAAE,EAJ2B;AAKnCC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE;AAA7B;AAL6B,GAAf,CAAtB;AAQA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACM,GAAN,CAAU,OAAyBC,KAAzB;AAAA,QAAC;AAAEJ,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD;AAAA,QAAiBI,IAAjB;;AAAA,WACT,MAAC,QAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEd,KAAK,CAACa,KAAD,CADZ;AAEE,MAAA,KAAK,oBACAC,IADA;AAEHC,QAAAA,SAAS,EAAEN,CAAC,CAACO,WAAF,CAAcP,CAAC,IAAK,kBAAiBA,CAAE,OAAvC;AAFR,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,GAAET,KAAK,CAACa,KAAD,CAAQ,GAPnB,CADS;AAAA,GAAV,CADH,CADF;AAeD","sourcesContent":["import { Fragment } from \"react\";\nimport { useTrail, animated } from \"react-spring\";\n\n\nexport default function Trail({ str }) {\n  const title = str.split(\" \");\n  const config = { mass: 10, tension: 600, friction: 200 };\n\n  const trail = useTrail(title.length, {\n    config,\n    opacity: 1,\n    x: 20,\n    height: 80,\n    from: { opacity: 0, x: 20, height: 0 }\n  });\n\n  return (\n    <Fragment>\n      {trail.map(({ x, height, ...rest }, index) => (\n        <animated.span\n          key={title[index]}\n          style={{\n            ...rest,\n            transform: x.interpolate(x => `translate3d(0, ${x}px,0)`)\n          }}\n        >\n          {`${title[index]} `}\n        </animated.span>\n      ))}\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}